name: Docker PR Build and Test

on:
  pull_request:
    branches: [main]

jobs:

  buildtest-linux:
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Build the Docker image
      id: docker_build
      uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
      with:
        file: docker/linux/amd64/Dockerfile
        push: false
        tags: nodeverify:${{ github.sha }}

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: nodeverify:${{ github.sha }}
        args: --file=docker/linux/amd64/Dockerfile --sarif-file-output=snyk.sarif
        sarif: true
        json: true
    - name: Upload Snyk result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'nodeverify:${{ github.sha }}'
    #     format: 'template'
    #     template: '@/contrib/sarif.tpl'
    #     output: 'trivy-results.sarif'
    #     severity: 'CRITICAL'

    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: 'trivy-results.sarif'

  buildtest-windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3.1.0

    - name: Build on Windows
      run: |
        docker build --file=docker/windows/amd64/Dockerfile -t nodeverify:${{ github.sha }} .

    # - name: Run Snyk to check for vulnerabilities
    #   uses: snyk/actions/docker@master
    #   continue-on-error: true
    #   env:
    #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    #   with:
    #     command: monitor
    #     image: nodeverify:${{ github.sha }}